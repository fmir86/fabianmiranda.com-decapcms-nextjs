// Honeycomb Grid Styles - DYNAMIC SIZING WITH JS
.honeycombContainer {
  position: relative;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  opacity: 0;
  transition: opacity 0.8s ease-out;
  overflow: visible;
  z-index: 1;
  @apply p-0 lg:p-8;

  &.loaded {
    opacity: 1;
  }
}

.honeycombGrid {
  position: relative;
  margin: 0 auto;
  padding: 20px;
  overflow: visible;
  
  // Default CSS custom properties (will be overridden by JS)
  --hex-width: 80px;
  --hex-height: 80px;
  --h-spacing: 75px;
  --v-spacing: 66px;
  --offset-amount: 37px;
  --icon-size: 32px;
}

// Individual Hexagon - Uses dynamic CSS custom properties
.hexagon {
  position: absolute;
  width: var(--hex-width);
  height: var(--hex-height);
  opacity: 0;
  transform: scale(0);
  animation: hexAppear 0.5s ease-out forwards;
  animation-delay: var(--delay);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  
  // Use CSS custom properties for positioning
  left: calc(var(--col) * var(--h-spacing) + var(--offset, 0px));
  top: calc(var(--row) * var(--v-spacing));

  &:hover,
  &.hovered {
    z-index: 100;
    transform: scale(1.3) translateY(-15px) rotateZ(5deg);
    filter: drop-shadow(0 20px 40px rgba(0, 212, 255, 0.4)) drop-shadow(0 10px 20px var(--hex-color));

    .hexagonShape polygon {
      fill: rgba(26, 26, 26, 0.98);
      stroke: var(--hex-color);
      stroke-width: 3;
    }

    .hexagonContent {
      transform: scale(1.1);
    }

    .techIcon {
      filter: brightness(0) invert(1) drop-shadow(0 0 15px var(--hex-color));
    }

    .techName {
      opacity: 1;
      transform: translateX(-50%) translateY(0);
    }
  }
}

// Hexagon Shape SVG
.hexagonShape {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;

  polygon {
    fill: rgba(26, 26, 26, 0.95);
    stroke: rgba(255, 255, 255, 0.1);
    stroke-width: 1;
    transition: all 0.3s ease;
  }
}

// Hexagon Inner Container
.hexagonInner {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90%;
  height: 90%;
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: center;
}

// Hexagon Content
.hexagonContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  transition: transform 0.3s ease;
}

// Dynamic icon sizing
.techIcon {
  width: var(--icon-size);
  height: var(--icon-size);
  filter: brightness(0) invert(1);
  transition: all 0.3s ease;
}

// Dynamic tech name sizing and positioning
.techName {
  font-size: calc(var(--icon-size) * 0.4);
  font-weight: 600;
  color: #FFFFFF;
  text-align: center;
  opacity: 0;
  transform: translateY(10px);
  transition: all 0.3s ease;
  position: absolute;
  top: calc(var(--hex-height) * -0.35);
  left: 50%;
  transform: translateX(-50%) translateY(10px);
  white-space: nowrap;
  background: rgba(26, 26, 26, 0.95);
  border: 1px solid var(--hex-color);
  padding: calc(var(--icon-size) * 0.1) calc(var(--icon-size) * 0.25);
  border-radius: calc(var(--icon-size) * 0.5);
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  z-index: 10;
  min-font-size: 10px;
  max-font-size: 14px;

  .hexagon:hover &,
  .hexagon.hovered & {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
}

// Background Pattern - Responsive
.backgroundPattern {
  position: absolute;
  inset: 0;
  overflow: hidden;
  pointer-events: none;
  z-index: 0;
}

.floatingHex {
  position: absolute;
  width: calc(var(--hex-width) * 1.5);
  height: calc(var(--hex-width) * 1.5);
  opacity: 0.02;
  left: var(--float-x);
  top: var(--float-y);
  animation: floatHex 20s ease-in-out infinite;
  animation-delay: var(--float-delay);

  &::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: var(--hex-color, #00D4FF);
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  }
}

// Animations
@keyframes hexAppear {
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes floatHex {
  0%, 100% {
    transform: translate(0, 0) rotate(0deg);
  }
  33% {
    transform: translate(50px, -30px) rotate(120deg);
  }
  66% {
    transform: translate(-30px, 50px) rotate(240deg);
  }
}

// Mobile optimizations for very small screens
@media (max-width: 400px) {
  .honeycombContainer {
    padding: 10px;
    max-width: 100%;
  }
  
  .honeycombGrid {
    padding: 10px;
  }
  
  .hexagon {
    &:hover,
    &.hovered {
      // Gentler hover effects on very small screens
      transform: scale(1.2) translateY(-10px) rotateZ(3deg);
      filter: drop-shadow(0 12px 24px rgba(0, 212, 255, 0.3)) drop-shadow(0 6px 12px var(--hex-color));
    }
  }
  
  .techName {
    font-size: max(10px, calc(var(--icon-size) * 0.35));
  }
}
